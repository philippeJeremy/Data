Hello @here,

J‚Äôesp√®re que votre premier cours d‚ÄôSQL s‚Äôest bien pass√© pour tous. Pour vous r√©sumer ce qu‚Äôon a vu:

1- SQL Introduction:

Les donn√©es sont des √©l√©ments stock√©s dans des colonnes, elles m√™me stock√©es dans des tables qui sont enfin stock√©es dans des databases.

Elles sont de diff√©rent type, qu'il faut pr√©ciser. Nous avons vu les types suivants :

TEXT (mots) INTEGER (nombre entier) DATETIME (date) REAL / FLOAT (nombre r√©el) NULL (donn√©e vide)

SQL et ses d√©clinaisons (notamment MySQL, PostgreSQL) sont tr√®s employ√©s pour la production, la manipulation et l'analyse de bases de donn√©es.

SQL n'est pas "case sensitive", mais mettre vos clauses en majuscule rendra vos scripts plus lisibles

; finit une instruction. Les espaces, tabulations et saut de ligne servent uniquement √† rendre votre code lisible

La clef d'un code qui tourne est la rigueur et la pratique. Il faut pr√™ter une attention toute particuli√®re √† la syntaxe: , , () , ;

Nous avons vu pour l'instant les clauses suivantes (cf cours pour le d√©tail) : CREATE DATABASE USE CREATE TABLE INSERT INTO ... VALUES SELECT ... FROM UPDATE ... SET ... WHERE ... ALTER TABLE ... ADD COLUMN ... ALTER TABLE ... DROP COLUMN ... DELETE FROM ... WHERE ...

Je vous invite √† pratiquer encore un peu et √† me contacter si vous avez des questions.
2 - Introduction to SQL:
Nous avons vus deux clauses : WHERE et ORDER BY Ainsi que de nombreux op√©rateurs: = , < , > , <= , >= , != , IS , AND , OR , BETWEEN,AND, LIKE

WHERE permet de sp√©cifier √† votre script quelles sont des lignes qui vous int√©ressent. Il est donc suivi d'une condition : WHERE colonne1 = x Dans ces conditions, les op√©rateurs standards sont utilisables: = , > , < , >= , <=

!= Signifie diff√©rent de.

IS permet de comparer le type de la donn√©e (integer, text, real...)

AND et OR permettent de cumuler ou d'assouplir vos conditions. Si m√©lange des deux, les parenth√®ses s'imposent !

SELECT * FROM IMDB.movies WHERE (title_year > 1990 AND title_year < 2000) OR imdb_score < 4 ;

Donne moi un film des ann√©es 90, ou un tr√®s mauvais film

BETWEEN AND sert √† d√©finir un intervalle. C'est plus √©l√©gant que > AND < et √ßa fonctionne avec les donn√©es de type texte (ordre alphab√©tique classique). Ne pas oublier le AND (intervalle d√©fini par deux jalons).

SELECT * FROM IMDB.movies WHERE (title_year BETWEEN 1990 AND 2000) OR imdb_score < 4 ;
M√™me instruction que ci-dessus

LIKE permet de comparer des morceaux de texte (et non pas la totalit√© du texte comme avec üòÉ % est le caract√®re "joker" : il se substitue √† une suite de caract√®re indiff√©remment de son contenu et de sa longueur. Sa place en revanche est tr√®s importante: WHERE actor_1_name LIKE '%John' tous ceux qui finissent par John WHERE actor_1_name LIKE 'John%' tous ceux qui commencent par John WHERE actor_1_name LIKE '%John' tous ceux qui contiennent John

‚ö†Ô∏è Important : dans un champs texte, la donn√©e est case sensitive (contrairement √† SQL): 'John' != 'john'

ORDER BY est une clause permettant de donner un ordre au lignes afin d'utiliser celles qui sont les plus pertinentes. Elle peut √™tre assortie de deux compl√©ments: DESC et LIMIT

DESC indique que le tri est d√©croissant (du min au max). Le tri croissant est pr√©sent par d√©faut. Il est possible de le rendre explicite via la commande ASC

LIMIT permet de donner un nombre de lignes max √† sortir via le ORDER BY La commande ressemble alors √† √ßa :

SELECT * FROM IMDB.movies WHERE title_year BETWEEN 1990 AND 2000 ORDER BY imdb_score DESC LIMIT 15;

On s√©lectionne les 15 meilleurs films des ann√©es 1990

A noter que la clause WHERE arrive avant ORDER BY (par logique d'efficacit√© de calcul, il est pr√©f√©rable d'extraire avant de trier).

Enfin le mot de commande AS va vous permettre de donner un alias √† vos variables et tables. Cette commande va s'av√©rer de plus en plus utile au fur et √† mesure de notre progression ensemble.

SELECT movie_title AS Title, title_year AS Year, imdb_score AS Score FROM IMDB.movies AS Mesfilms WHERE Year BETWEEN 1990 AND 2000